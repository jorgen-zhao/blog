(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{447:function(t,e,v){"use strict";v.r(e);var _=v(14),r=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("由于Kubernetes有很多核心概念，学习它们对理解Kubernetes的使用很有帮助，所以我们先来学习下这些概念。")])]),t._v(" "),e("h2",{attrs:{id:"replicaset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replicaset"}},[t._v("#")]),t._v(" ReplicaSet")]),t._v(" "),e("p",[t._v("ReplicaSet确保任何时间都有指定数量的Pod副本在运行。通常用来保证给定数量的、完全相同的Pod的可用性。建议使用Deployment来管理ReplicaSet，而不是直接使用ReplicaSet。")]),t._v(" "),e("h2",{attrs:{id:"configmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configmap"}},[t._v("#")]),t._v(" ConfigMap")]),t._v(" "),e("p",[t._v("ConfigMap是一种API对象，用来将非机密性的数据保存到键值对中。使用时，Pod可以将其用作环境变量、命令行参数或者存储卷中的配置文件。使用ConfigMap可以将你的配置数据和应用程序代码分开。")]),t._v(" "),e("h2",{attrs:{id:"volume"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[t._v("#")]),t._v(" Volume")]),t._v(" "),e("p",[t._v("Volume指的是存储卷，包含可被Pod中容器访问的数据目录。容器中的文件在磁盘上是临时存放的，当容器崩溃时文件会丢失，同时无法在多个Pod中共享文件，通过使用存储卷可以解决这两个问题。\n常用的存储卷有如下几种：")]),t._v(" "),e("ul",[e("li",[t._v("configMap：configMap卷提供了向Pod注入配置数据的方法。ConfigMap对象中存储的数据可以被configMap类型的卷引用，然后被Pod中运行的容器化应用使用。")]),t._v(" "),e("li",[t._v("emptyDir：emptyDir卷可用于存储缓存数据。当Pod分派到某个Node上时，emptyDir卷会被创建，并且Pod在该节点上运行期间，卷一直存在。当Pod被从节点上删除时emptyDir卷中的数据也会被永久删除。")]),t._v(" "),e("li",[t._v("hostPath：hostPath卷能将主机节点文件系统上的文件或目录挂载到你的Pod中。在Minikube中的主机指的是Minikube所在虚拟机。")]),t._v(" "),e("li",[t._v("local：local卷所代表的是某个被挂载的本地存储设备，例如磁盘、分区或者目录。local卷只能用作静态创建的持久卷，尚不支持动态配置。")]),t._v(" "),e("li",[t._v("nfs：nfs卷能将NFS（网络文件系统）挂载到你的Pod中。")]),t._v(" "),e("li",[t._v("persistentVolumeClaim：persistentVolumeClaim卷用来将持久卷（PersistentVolume）挂载到Pod中。持久卷（PV）是集群中的一块存储，可以由管理员事先供应，或者使用存储类（Storage Class）来动态供应，持久卷是集群资源类似于节点。")])]),t._v(" "),e("h2",{attrs:{id:"ingress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress"}},[t._v("#")]),t._v(" Ingress")]),t._v(" "),e("p",[t._v("Ingress类似于K8S中的网关服务，是对集群中服务的外部访问进行管理的API对象，典型的访问方式是HTTP。Ingress可以提供负载均衡、SSL终结和基于名称的虚拟托管。")]),t._v(" "),e("div",{staticClass:"center-container"},[e("p",[t._v("传统 Spring Cloud 与 Kubernetes 提供的解决方案对比")])]),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("Kubernetes")]),t._v(" "),e("th",[t._v("Spring Cloud")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("弹性伸缩")]),t._v(" "),e("td",[t._v("Autoscaling")]),t._v(" "),e("td",[t._v("N/A")])]),t._v(" "),e("tr",[e("td",[t._v("服务发现")]),t._v(" "),e("td",[t._v("KubeDNS / CoreDNS")]),t._v(" "),e("td",[t._v("Spring Cloud Eureka")])]),t._v(" "),e("tr",[e("td",[t._v("配置中心")]),t._v(" "),e("td",[t._v("ConfigMap / Secret")]),t._v(" "),e("td",[t._v("Spring Cloud Config")])]),t._v(" "),e("tr",[e("td",[t._v("服务网关")]),t._v(" "),e("td",[t._v("Ingress Controller")]),t._v(" "),e("td",[t._v("Spring Cloud Zuul")])]),t._v(" "),e("tr",[e("td",[t._v("负载均衡")]),t._v(" "),e("td",[t._v("Load Balancer")]),t._v(" "),e("td",[t._v("Spring Cloud Ribbon")])]),t._v(" "),e("tr",[e("td",[t._v("服务安全")]),t._v(" "),e("td",[t._v("RBAC API")]),t._v(" "),e("td",[t._v("Spring Cloud Security")])]),t._v(" "),e("tr",[e("td",[t._v("跟踪监控")]),t._v(" "),e("td",[t._v("Metrics API / Dashboard")]),t._v(" "),e("td",[t._v("Spring Cloud Turbine")])]),t._v(" "),e("tr",[e("td",[t._v("降级熔断")]),t._v(" "),e("td",[t._v("N/A")]),t._v(" "),e("td",[t._v("Spring Cloud Hystrix")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);