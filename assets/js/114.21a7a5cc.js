(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{460:function(e,t,a){"use strict";a.r(t);var i=a(14),o=Object(i.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"go-youtube-booking-app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go-youtube-booking-app"}},[e._v("#")]),e._v(" Go youtube booking-app")]),e._v(" "),t("h3",{attrs:{id:"basic-info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-info"}},[e._v("#")]),e._v(" Basic Info")]),e._v(" "),t("ol",[t("li",[e._v("2007 google 2009 open source")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jorgen-zhao/picGo/blog/go_roadmap.png",alt:"go"}})]),e._v(" "),t("ol",[t("li",[t("p",[e._v("use cases")]),e._v(" "),t("ol",[t("li",[e._v("for performant applications")]),e._v(" "),t("li",[e._v("runing on scaled distributed systems")])])]),e._v(" "),t("li",[t("p",[e._v("characterics")]),e._v(" "),t("ol",[t("li",[e._v("simple syntax, Easy to learn read and write code")]),e._v(" "),t("li",[e._v("fast build time start up and run")]),e._v(" "),t("li",[e._v("require fewer resources")]),e._v(" "),t("li",[e._v("faster than interpreted languages like python")]),e._v(" "),t("li",[e._v("consistent across different os")])])]),e._v(" "),t("li",[t("p",[e._v("install")])]),e._v(" "),t("li",[t("p",[e._v("vscode：go extension "),t("em",[t("strong",[e._v("Go team at Google")])])])])]),e._v(" "),t("h2",{attrs:{id:"first-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first-code"}},[e._v("#")]),e._v(" first code")]),e._v(" "),t("h3",{attrs:{id:"hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[e._v("#")]),e._v(" hello world")]),e._v(" "),t("ol",[t("li",[e._v("init module "),t("em",[t("code",[e._v("go mod init <module path>")])])]),e._v(" "),t("li",[e._v("all our code must belong to "),t("em",[t("code",[e._v("**packages")]),e._v(" — the first statement in Go file must be ‘package…’")]),e._v("**")]),e._v(" "),t("li",[e._v("the "),t("strong",[e._v("“main function”")]),e._v(" is the "),t("strong",[e._v("entrypoint")]),e._v(" of a Go program")]),e._v(" "),t("li",[e._v("A program can only have 1 main function because you can only have 1 entrypoint")]),e._v(" "),t("li",[e._v("Go packages:\n"),t("ol",[t("li",[e._v("Go programs are organized into packages")]),e._v(" "),t("li",[e._v("Go’s standard library, provides different core packages for us to use")]),e._v(" "),t("li",[e._v("‘fmt’ is one of these, which you can use by importing it")]),e._v(" "),t("li",[e._v("a package is a collection of source files")])])]),e._v(" "),t("li",[e._v("go run "),t("code",[e._v("<file name>")]),e._v(" = compiles and runs the code")])]),e._v(" "),t("h2",{attrs:{id:"variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#variable"}},[e._v("#")]),e._v(" Variable")]),e._v(" "),t("ol",[t("li",[e._v("Variable must be used")]),e._v(" "),t("li",[e._v("Constants are like variables, except their values "),t("strong",[e._v("cannot be changed")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"printf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#printf"}},[e._v("#")]),e._v(" printf")]),e._v(" "),t("p",[e._v("pkg.go.dev/fmt：print formatted data")]),e._v(" "),t("ul",[t("li",[e._v("It takes a "),t("strong",[e._v("template string")]),e._v(" that contains the text that need be formatted.")]),e._v(" "),t("li",[e._v("plus some "),t("strong",[e._v("annotation verbs(placeholder)")]),e._v(" that tells the fmt functions how to format the variable passed in.")])]),e._v(" "),t("h2",{attrs:{id:"data-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[e._v("#")]),e._v(" Data Types")]),e._v(" "),t("p",[e._v("Go is a statically typed language")]),e._v(" "),t("ul",[t("li",[e._v("you need to tell go compiler, the data type when declaring the variable")]),e._v(" "),t("li",[e._v("Type Inference: BUT Go can infer the type when you assign a value")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Go")]),e._v(" "),t("th",[e._v("Java")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("int8")]),e._v(" "),t("td",[e._v("byte")])]),e._v(" "),t("tr",[t("td",[e._v("int16")]),e._v(" "),t("td",[e._v("short")])]),e._v(" "),t("tr",[t("td",[e._v("int32")]),e._v(" "),t("td",[e._v("int")])]),e._v(" "),t("tr",[t("td",[e._v("int64")]),e._v(" "),t("td",[e._v("long")])])])]),e._v(" "),t("p",[e._v("sytactic suger in Programming")]),e._v(" "),t("ul",[t("li",[e._v("a term to describe a feature in a language that let you do smth more easily")]),e._v(" "),t("li",[e._v("make the language ‘sweeter’ to human use")]),e._v(" "),t("li",[e._v("But doesn’t add any new functionality that it didn’t already have")])]),e._v(" "),t("h2",{attrs:{id:"get-user-input"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-user-input"}},[e._v("#")]),e._v(" Get user input")]),e._v(" "),t("p",[t("strong",[e._v("fmt → formatted Input and Output(I/O)")])]),e._v(" "),t("ul",[t("li",[e._v("Print Messages")]),e._v(" "),t("li",[e._v("Collect User Input")]),e._v(" "),t("li",[e._v("Write into a File")])]),e._v(" "),t("p",[e._v("Pointer")]),e._v(" "),t("ul",[t("li",[e._v("A pointer is a variable that points to the memory address of another variable")]),e._v(" "),t("li",[e._v("a special variable")])]),e._v(" "),t("h2",{attrs:{id:"array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[e._v("#")]),e._v(" Array")]),e._v(" "),t("ul",[t("li",[e._v("Fixed Size how many elements the array can hold")]),e._v(" "),t("li",[e._v("Only the "),t("strong",[e._v("same data type")]),e._v(" can be stored.")])]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("var variable_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("data_type\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"slice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[e._v("#")]),e._v(" Slice")]),e._v(" "),t("ul",[t("li",[e._v("Slice is an "),t("strong",[e._v("abstraction of the array")])]),e._v(" "),t("li",[e._v("Slices are more flexible and powerful: "),t("strong",[e._v("variable-length")]),e._v(" or get an sub-array of its own")]),e._v(" "),t("li",[e._v("Slices are also "),t("strong",[e._v("index-based")]),e._v(" and have a size, but is "),t("strong",[e._v("resized when needed")])])]),e._v(" "),t("p",[e._v("append")]),e._v(" "),t("ul",[t("li",[e._v("Adds the element "),t("strong",[e._v("at the end of the slice")])]),e._v(" "),t("li",[t("strong",[e._v("Grows the slice if a greater capacity is needed")]),e._v(" and return the updated slice value")])]),e._v(" "),t("h2",{attrs:{id:"loops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loops"}},[e._v("#")]),e._v(" Loops")]),e._v(" "),t("ul",[t("li",[e._v("In general, Languages provide various control structures to control the application flow")]),e._v(" "),t("li",[e._v("a loop statement allows us to execute code multiple times, in a loop")]),e._v(" "),t("li",[e._v("only have ‘"),t("strong",[e._v("for")]),e._v("’ loop")])]),e._v(" "),t("p",[e._v("Range")]),e._v(" "),t("ul",[t("li",[e._v("Range "),t("strong",[e._v("iterates over elements for different data structures")]),e._v(" (so not only arrays  and slices)")]),e._v(" "),t("li",[e._v("For arrays ans slices, "),t("strong",[e._v("range provides the index and value for each element")]),e._v(".")])]),e._v(" "),t("p",[e._v("string.Fields()")]),e._v(" "),t("ul",[t("li",[e._v("Splits the string with white space as separator")]),e._v(" "),t("li",[e._v("And return a slice with the split elements")])]),e._v(" "),t("p",[e._v("Blank identifier")]),e._v(" "),t("ul",[t("li",[e._v("to ignore a variable you don’t want to use")]),e._v(" "),t("li",[e._v("So with Go you need to make unused variables explicit")])]),e._v(" "),t("h2",{attrs:{id:"condition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#condition"}},[e._v("#")]),e._v(" Condition")]),e._v(" "),t("p",[e._v("if statement {}")]),e._v(" "),t("p",[e._v("break statement")]),e._v(" "),t("ul",[t("li",[e._v("Terminate the for loop")]),e._v(" "),t("li",[e._v("And continues with the code right after the for loop")])]),e._v(" "),t("p",[e._v("continue statement")]),e._v(" "),t("ul",[t("li",[e._v("Cause loop to skip the remainder of its body")]),e._v(" "),t("li",[e._v("And immediately retesting its condition")])]),e._v(" "),t("p",[e._v("switch statement")]),e._v(" "),t("ul",[t("li",[e._v("allows a variable to be tested for equality against a list of values")]),e._v(" "),t("li",[e._v("default handle the case, if not match is found")])]),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Encapsulate code")]),e._v(" into own container  which logically belong together")])]),e._v(" "),t("li",[t("p",[e._v("Like variable name, you should give a funtion a "),t("strong",[e._v("descriptive name")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("call the function by its name")]),e._v(", whenever you want to execute this block of code")])]),e._v(" "),t("li",[t("p",[e._v("every program has at least one funtion, which is the "),t("strong",[e._v("main()")]),e._v(" function")])]),e._v(" "),t("li",[t("p",[e._v("Funtion is only executed when "),t("em",[e._v("called")])])]),e._v(" "),t("li",[t("p",[e._v("you can call a function as many times you want")])]),e._v(" "),t("li",[t("p",[e._v("so funtion is also used to "),t("strong",[e._v("reduce code duplication")])])])]),e._v(" "),t("p",[e._v("parameters")]),e._v(" "),t("ul",[t("li",[e._v("information can be passed into funtions as parameters")]),e._v(" "),t("li",[e._v("parameters are also call arguments")])]),e._v(" "),t("p",[e._v("Mutiple packages")]),e._v(" "),t("p",[e._v("exporting a variable")]),e._v(" "),t("ul",[t("li",[e._v("make it avaiable for all packages in the app")]),e._v(" "),t("li",[e._v("Capitalize first letter")])]),e._v(" "),t("p",[e._v("3 level of scope")]),e._v(" "),t("p",[e._v("local")]),e._v(" "),t("ul",[t("li",[e._v("declaration within function → can be used only with that function")]),e._v(" "),t("li",[e._v("declaration within block → can be used only within that block")])]),e._v(" "),t("p",[e._v("package")]),e._v(" "),t("ul",[t("li",[e._v("declaration outside all funtions → can be used everywhere in the same package")])]),e._v(" "),t("p",[e._v("global")]),e._v(" "),t("ul",[t("li",[e._v("declaration outside all functions & uppercase first letter → can be used everywhere across all packages")])]),e._v(" "),t("p",[e._v("variable scope")]),e._v(" "),t("p",[e._v("scope is the region of a program, where a defined variable can be accessed")]),e._v(" "),t("p",[e._v("maps")]),e._v(" "),t("ul",[t("li",[e._v("maps unique keys to values")]),e._v(" "),t("li",[e._v("you can retrieve the value by using its key later")]),e._v(" "),t("li",[e._v("all keys have same data types — all values have same data types")])]),e._v(" "),t("p",[e._v("struct")]),e._v(" "),t("p",[e._v("the type keyword creates a new type, with the name you specify")]),e._v(" "),t("p",[e._v("In fact, you can create a type based on every other data type like int, string etc")]),e._v(" "),t("h2",{attrs:{id:"goroutine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#goroutine"}},[e._v("#")]),e._v(" goroutine")]),e._v(" "),t("p",[e._v("concurrency")]),e._v(" "),t("p",[e._v("go keyword")]),e._v(" "),t("ul",[t("li",[e._v("“go…” starts a new goroutine")]),e._v(" "),t("li",[e._v("A goroutine is a "),t("strong",[e._v("lightweight thread")]),e._v(" managed by Go runtime")])]),e._v(" "),t("h2",{attrs:{id:"waitgroup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waitgroup"}},[e._v("#")]),e._v(" Waitgroup")]),e._v(" "),t("ul",[t("li",[e._v("wait for the launched goroutine to finish")]),e._v(" "),t("li",[e._v("Package “sync” provides basic synchronization functionality")]),e._v(" "),t("li",[t("strong",[e._v("Add")]),e._v(": sets the number of goroutines to wait for (increases the counter by the provided number)")]),e._v(" "),t("li",[t("strong",[e._v("Wait")]),e._v(": Blocks until the WaitGroup counter is 0")]),e._v(" "),t("li",[t("strong",[e._v("Done")]),e._v(": decrements the WaitGroup counter by 1 so this is called by the goroutine to indicate that its finished")])]),e._v(" "),t("p",[e._v("built-in functionality for goroutine to talk with one another")]),e._v(" "),t("p",[e._v("comparison to other languages")]),e._v(" "),t("p",[e._v("| writing concurrent code | writing concurrent code is more complex")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("more overhead")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Threads vs Goroutines")])]),e._v(" "),t("tr",[t("td",[e._v("heavyweight and needs more hardware resources")])])])]),e._v(" "),t("p",[e._v("why? what is the different?")])])}),[],!1,null,null,null);t.default=o.exports}}]);