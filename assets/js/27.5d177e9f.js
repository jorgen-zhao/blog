(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{373:function(a,t,s){"use strict";s.r(t);var v=s(14),e=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("这次的 JNI 方案，算是一次挺有趣的探索，折腾了一番，总算把 Capacitor 和安卓底层打通了。希望这篇文章能帮到同样在踩坑的朋友们！🚀\n")]),a._v(" "),t("h2",{attrs:{id:"🏁-capacitor-使用-jni-的方式集成安卓底层-sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🏁-capacitor-使用-jni-的方式集成安卓底层-sdk"}},[a._v("#")]),a._v(" 🏁 Capacitor 使用 JNI 的方式集成安卓底层 SDK")]),a._v(" "),t("p",[a._v("在 Capacitor 这类跨平台框架中，如何与安卓底层 SDK 交互？这是我在开发过程中遇到的一个现实问题。")]),a._v(" "),t("p",[a._v("这次的需求是："),t("strong",[a._v("让地面端程序能够获取遥控器的遥感按键数据")]),a._v("。刚开始，我尝试了各种方式，比如在网上查到的 joystick 方式，兴冲冲地试了一番，结果——行不通 😑。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jorgen-zhao/picGo/blog/mk15.png",alt:"遥控器"}})]),a._v(" "),t("p",[a._v("后来，我反编译了遥控器的 APK（"),t("a",{attrs:{href:"https://github.com/skylot/jadx",target:"_blank",rel:"noopener noreferrer"}},[a._v("Jdax"),t("OutboundLink")],1),a._v(" 大法好！），发现它是通过 "),t("strong",[a._v("UART 串口")]),a._v(" 读取通道值的。好，那就走 UART！🔍\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jorgen-zhao/picGo/blog/serial_port.png",alt:"串口"}})]),a._v(" "),t("p",[a._v("研究了一下，发现 Google 以前的一个项目"),t("a",{attrs:{href:"https://code.google.com/archive/p/android-serialport-api/",target:"_blank",rel:"noopener noreferrer"}},[a._v("android-serialport-api"),t("OutboundLink")],1),a._v("可以作为参考，于是决定用 JNI + UART 来搞定这个问题。")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"🛠️-实施过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🛠️-实施过程"}},[a._v("#")]),a._v(" 🛠️ 实施过程")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("JNI 层：实现 UART 读取")])]),a._v(" "),t("ul",[t("li",[a._v("使用 "),t("code",[a._v("termios")]),a._v(" 配置串口参数")]),a._v(" "),t("li",[a._v("通过 "),t("code",[a._v("open()")]),a._v("、"),t("code",[a._v("read()")]),a._v(" 读取数据")]),a._v(" "),t("li",[a._v("提供 "),t("code",[a._v("JNI_OnLoad()")]),a._v(" 方法，供 Java 层调用")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("Java 层：封装 JNI 调用")])]),a._v(" "),t("ul",[t("li",[a._v("通过 "),t("code",[a._v("System.loadLibrary()")]),a._v(" 加载 so 库")]),a._v(" "),t("li",[a._v("用 "),t("code",[a._v("native")]),a._v(" 方法封装 C 层的 UART 读取逻辑")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("Capacitor Plugin：桥接到前端")])]),a._v(" "),t("ul",[t("li",[a._v("在 Capacitor 中创建一个自定义插件")]),a._v(" "),t("li",[a._v("通过 "),t("code",[a._v("@PluginMethod")]),a._v(" 提供前端调用")]),a._v(" "),t("li",[a._v("通过 "),t("code",[a._v("bridge.getActivity()")]),a._v(" 获取上下文，调用 Java 层的 JNI 方法")])])])]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"🔥敲黑板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔥敲黑板"}},[a._v("#")]),a._v(" 🔥敲黑板")]),a._v(" "),t("p",[a._v("Android开发中使用"),t("code",[a._v(".aar")]),a._v("文件和"),t("code",[a._v(".so")]),a._v("库，以及JNI调用的相关知识点：")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v(".aar文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v(".aar")]),a._v("文件是Android库项目的二进制分发格式。")]),a._v(" "),t("li",[a._v("包含编译后的代码、资源文件、AndroidManifest.xml、ProGuard规则等。")]),a._v(" "),t("li",[a._v("用于模块化代码和资源，便于复用和管理。")]),a._v(" "),t("li",[a._v("可以通过Gradle依赖管理引入项目中。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v(".so文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v(".so")]),a._v("文件是动态链接库，包含C/C++编写的原生代码。")]),a._v(" "),t("li",[a._v("用于性能提升、代码保护和复用现有库。")]),a._v(" "),t("li",[a._v("需要根据不同CPU架构提供对应的"),t("code",[a._v(".so")]),a._v("文件。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("JNI（Java Native Interface）")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("JNI是Java代码和原生代码之间的桥梁。")]),a._v(" "),t("li",[a._v("允许Java/Kotlin代码调用C/C++代码。")]),a._v(" "),t("li",[a._v("需要在Java/Kotlin中声明native方法，并在C/C++中实现这些方法。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("引入.aar文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("通过Gradle的"),t("code",[a._v("dependencies")]),a._v("块引入"),t("code",[a._v(".aar")]),a._v("文件。")]),a._v(" "),t("li",[a._v("可以直接指定"),t("code",[a._v(".aar")]),a._v("文件的路径或使用Maven仓库。\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jorgen-zhao/picGo/blog/aar.png",alt:"aar文件"}})])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("引入.so文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("将"),t("code",[a._v(".so")]),a._v("文件放入"),t("code",[a._v("src/main/jniLibs/")]),a._v("目录下对应的架构子目录中。")]),a._v(" "),t("li",[a._v("配置"),t("code",[a._v("build.gradle")]),a._v("文件以确保"),t("code",[a._v(".so")]),a._v("文件被正确打包到APK中。\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/jorgen-zhao/picGo/blog/lib.png",alt:"lib"}})])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("打包.aar文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("通过Gradle构建系统打包"),t("code",[a._v(".aar")]),a._v("文件。")]),a._v(" "),t("li",[a._v("配置"),t("code",[a._v("build.gradle")]),a._v("文件，使用"),t("code",[a._v("com.android.library")]),a._v("插件。")]),a._v(" "),t("li",[a._v("构建完成后在"),t("code",[a._v("build/outputs/aar/")]),a._v("目录下找到"),t("code",[a._v(".aar")]),a._v("文件。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("直接使用.so文件")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("将构建好的"),t("code",[a._v(".so")]),a._v("文件复制到新项目的"),t("code",[a._v("jniLibs")]),a._v("目录下。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("实现JNI调用")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("在Java/Kotlin中声明native方法。")]),a._v(" "),t("li",[a._v("在C/C++中实现native方法，使用JNI函数。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("配置CMake或ndk-build")]),a._v("：")]),a._v(" "),t("ul",[t("li",[a._v("配置"),t("code",[a._v("CMakeLists.txt")]),a._v("或"),t("code",[a._v("Android.mk")]),a._v("文件以编译C/C++代码。")])])])]),a._v(" "),t("div",{staticClass:"language-cmake line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cmake"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# For more information about using CMake with Android Studio, read the")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# documentation: https://d.android.com/studio/projects/add-native-code.html")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sets the minimum version of CMake required to build the native library.")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("cmake_minimum_required")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("VERSION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.4.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("add_library")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sets the name of the library.")]),a._v("\n        serialport\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sets the library as a shared library.")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("SHARED")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Provides a relative path to your source file(s).")]),a._v("\n        src/main/jni/SerialPort.c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("find_library")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sets the name of the path variable.")]),a._v("\n        log-lib\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Specifies the name of the NDK library that")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# you want CMake to locate.")]),a._v("\n        log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("target_link_libraries")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Specifies the target library.")]),a._v("\n        serialport\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Links the target library to the log library")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# included in the NDK.")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("${")]),a._v("log-lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br"),t("span",{staticClass:"line-number"},[a._v("26")]),t("br"),t("span",{staticClass:"line-number"},[a._v("27")]),t("br"),t("span",{staticClass:"line-number"},[a._v("28")]),t("br"),t("span",{staticClass:"line-number"},[a._v("29")]),t("br")])]),t("ol",{attrs:{start:"10"}},[t("li",[t("strong",[a._v("调用Native方法")]),a._v("：\n"),t("ul",[t("li",[a._v("在Java/Kotlin代码中加载"),t("code",[a._v(".so")]),a._v("库并调用native方法。")])])])]),a._v(" "),t("h3",{attrs:{id:"🚀-拓展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🚀-拓展"}},[a._v("#")]),a._v(" 🚀 拓展")]),a._v(" "),t("p",[a._v("明白了JNI对安卓底层调用的原理，再回头看 Capacitor 插件的实现，发现其实也是类似的思路。只不过 Capacitor 插件是通过 "),t("code",[a._v("@PluginMethod")]),a._v(" 注解，将 Java 方法暴露给前端调用，而 JNI 是通过 "),t("code",[a._v("native")]),a._v(" 关键字，将 C 方法暴露给 Java 调用。\n后续FPV插件、RTK等插件的开发，也参考了这种思路，通过 JNI 调用安卓底层 SDK，实现更多功能。")]),a._v(" "),t("h3",{attrs:{id:"🔥-遇到的难题-解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔥-遇到的难题-解决办法"}},[a._v("#")]),a._v(" 🔥 遇到的难题 & 解决办法")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("问题 🤔")]),a._v(" "),t("th",[a._v("解决方案 ✅")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("串口权限受限，无法访问 UART")]),a._v(" "),t("td",[a._v("申请 "),t("code",[a._v("android.permission.READ/WRITE_EXTERNAL_STORAGE")]),a._v("，并运行 "),t("code",[a._v("chmod 666")]),a._v(" 放开权限")])]),a._v(" "),t("tr",[t("td",[a._v("读取的数据乱码")]),a._v(" "),t("td",[a._v("设置正确的 "),t("code",[a._v("波特率")]),a._v("，确保串口参数匹配")])]),a._v(" "),t("tr",[t("td",[a._v("JNI 层内存泄漏")]),a._v(" "),t("td",[a._v("使用 RAII 处理资源，"),t("code",[a._v("close()")]),a._v(" 及时释放文件描述符")])])])]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"🎯-理解与感悟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🎯-理解与感悟"}},[a._v("#")]),a._v(" 🎯 理解与感悟")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("别盲目尝试，先搞清楚原理再动手！")])]),a._v(" "),t("ul",[t("li",[a._v("joystick 方案就是个教训，得先弄明白遥控器的工作方式。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("反编译有时候是个捷径！")])]),a._v(" "),t("ul",[t("li",[a._v("Jdax 让我快速找到了正确的 UART 方案。")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("Capacitor + JNI 是一个很好的组合")])]),a._v(" "),t("ul",[t("li",[a._v("既能保证跨平台开发的灵活性，又能调用安卓底层能力。")])])])]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"🎭-结尾-送自己一句话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🎭-结尾-送自己一句话"}},[a._v("#")]),a._v(" 🎭 结尾：送自己一句话")]),a._v(" "),t("blockquote",[t("p",[a._v("“所有的困难，都是为了让你学会解决它。” 😆")])])])}),[],!1,null,null,null);t.default=e.exports}}]);