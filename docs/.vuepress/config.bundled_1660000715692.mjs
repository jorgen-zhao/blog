// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: `<div style="padding: 0.95rem">
    <p style="
      color: var(--textColor);
      opacity: 0.9;
      font-size: 20px;
      font-weight: bold;
      margin: 0 0 8px 0;
    ">\u4E2A\u4EBA\u5FAE\u4FE1\u53F7</p>
    <img src="/img/wechat.jpg"  style="width:100%;" />
    \u52A0\u6211[<b>\u4E00\u8D77\u5B66\u4E60\uFF0C\u4E00\u8D77\u8FDB\u6B65</b>]
    </p>
    </div>`
};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Jorgen's blog",
      description: "\u6280\u672F\u535A\u5BA2,\u5B66\u4E60\u4E0E\u603B\u7ED3\u3002Java,vue,Springboot,MySQL,Docker,Kafka,ES,Node,git,github\u7B49\u6280\u672F\u6587\u7AE0\u3002"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      { text: "\u{1F525}\u5B9E\u6218\u6848\u4F8B\u{1F4A5}", link: "/note/realDev/" },
      {
        text: "\u5DE5\u5177",
        link: "/ui/",
        items: [
          { text: "Docker", link: "/pages/64433f/" },
          { text: "ELK", link: "/pages/5fc1e0/" },
          { text: "Git", link: "/note/git/" }
        ]
      },
      {
        text: "\u6536\u85CF",
        link: "/pages/beb6c0bd8a66cea6/"
      },
      { text: "\u5173\u4E8E", link: "/about/" },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" }
        ]
      }
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    repo: "https://github.com/jorgen-zhao",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    sidebar: "structuring",
    author: {
      name: " Jorgen",
      link: "https://gitee.com/jorgenme"
    },
    blogger: {
      avatar: "/img/avatar.jpg",
      name: "Jorgen",
      slogan: "\u9762\u58C1&\u7834\u58C1"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:1129810754@qq.com"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://gitee.com/jorgenme"
        },
        {
          iconClass: "icon-erji",
          title: "\u542C\u97F3\u4E50",
          link: "https://music.163.com/#/playlist?id=755597173"
        }
      ]
    },
    footer: {
      createYear: 2019,
      copyrightInfo: 'Jorgen | <a href="https://gitee.com/jorgenme/vuepress-theme-vdoing/blob/master/LICENSE" target="_blank">MIT License</a>'
    },
    extendFrontmatter: {
      author: {
        name: "Jorgen",
        link: "https://gitee.com/jorgenme"
      }
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content: "\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2\u6280\u672F\u6587\u6863,\u5B66\u4E60,JAVA,SpringBott,SpringCloud,Mybatis,MySQL,Kafka,Docker,Graylog,Elasticsearch,git,github,markdown"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: [
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    [
      "thirdparty-search",
      {
        thirdparty: [
          {
            title: "\u5728MDN\u4E2D\u641C\u7D22",
            frontUrl: "https://developer.mozilla.org/zh-CN/search?q=",
            behindUrl: ""
          },
          {
            title: "\u5728Runoob\u4E2D\u641C\u7D22",
            frontUrl: "https://www.runoob.com/?s="
          },
          {
            title: "\u5728Vue API\u4E2D\u641C\u7D22",
            frontUrl: "https://cn.vuejs.org/v2/api/#"
          },
          {
            title: "\u5728Bing\u4E2D\u641C\u7D22",
            frontUrl: "https://cn.bing.com/search?q="
          },
          {
            title: "\u901A\u8FC7\u767E\u5EA6\u641C\u7D22\u672C\u7AD9\u7684",
            frontUrl: "https://www.baidu.com/s?wd=site%3AJorgen.com%20"
          }
        ]
      }
    ],
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ]
  ],
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
